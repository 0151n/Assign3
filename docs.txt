 Documentation for Group 2's Assignment 3
------------------------------------------

Create a new data structure to hold a polynomial in memory

name: make_poly
parameters: size

pseudocode
----------
	Allocate a block of memory of size (size of the struct) + size * (size of a single double)
	Check that the memory was allocated and return NULL if it wasn't
	set the size element of the struct to the inputed size
	for each element in the structs coefficient array
		set coefficient to 0
	return pointer to new polynomial struct


------------------------------------------

Function: Create a polynomial

name: create_poly
parameters: size, coefficents

pseudocode
----------

	define a new poly in memory using make_poly function
	for each element in the new poly's coefficient array
		set coefficient to corresponding coefficient in input coefficient array
	return pointer to new polynomial in memory


------------------------------------------

Function: Delete a polynimial from memory

name: delete_poly
parameters: size,coefficients

pseudocode
----------

	Delete structure from memory using free() function

------------------------------------------

Function: Add together two polynomials

name: poly_add
parameters: a,b

pseudocode
----------

	Find which polynomial a or b is of the highest degree and store the size of each in a variable.
	Create a polynomial sum using make_poly to store and return answer
	For each coefficient that's power is in both polynomials
		Add coefficient of a and b and store in sum 
	For each coefficient that's power is only in the polynomial of higher degree
		Set coefficient of sum to coefficient of polynomial of higher degree
	return pointer to polynomial sum

------------------------------------------

Function: Subtract one polynomial from another

name: poly_sub
parameters: a,b

pseudocode
----------

	Find which polynomial a or b is of the highest degree and store the size of each in a variable.
	Create a polynomial sub using make_poly to store and return answer
	For each coefficient that's power is in both polynomials
		Subtract the coefficient of a from b and store in sub 
	For each coefficient that's power is only in the polynomial of higher degree
		Set coefficient of sub to coefficient of polynomial of higher degree or to negative of coefficient if b is higher degree than a
	return pointer to polynomial sub

------------------------------------------
